Index: tutorialspatialparams_coupled.hh
===================================================================
--- tutorialspatialparams_coupled.hh	(revision 15068)
+++ tutorialspatialparams_coupled.hh	(working copy)
@@ -119,7 +119,7 @@
     Scalar porosity(const Element &element,                    /*@\label{tutorial-coupled:porosity}@*/
                     const FVElementGeometry &fvGeometry,
                     const int scvIdx) const
-    { return 0.2; }
+    { return porosity_; }
 
     /*! Returns the parameter object for the material law (i.e. Brooks-Corey)
      *  depending on the position in the domain
@@ -146,9 +146,22 @@
     {
         //set main diagonal entries of the permeability tensor to a value
         //setting to one value means: isotropic, homogeneous
-        for (int i = 0; i < dim; i++)
-            K_[i][i] = 1e-7;
+        try
+        {
+            for (int i = 0; i < dim; i++)
+                K_[i][i] = GET_RUNTIME_PARAM(TypeTag, Scalar, SpatialParams.Perm);
 
+            porosity_ = GET_RUNTIME_PARAM(TypeTag, Scalar, SpatialParams.Porosity);
+        }
+        catch (Dumux::ParameterException &e) {
+            std::cerr << e << ". Abort!\n";
+            exit(1) ;
+        }
+        catch (...) {
+            std::cerr << "Unknown exception thrown!\n";
+            exit(1);
+        }
+
         //set residual saturations
         materialParams_.setSwr(0.0);                /*@\label{tutorial-coupled:setLawParams}@*/
         materialParams_.setSnr(0.0);
@@ -160,6 +173,7 @@
 
 private:
     Dune::FieldMatrix<Scalar, dim, dim> K_;
+    Scalar porosity_;
     // Object that holds the values/parameters of the selected material law.
     MaterialLawParams materialParams_;                 /*@\label{tutorial-coupled:matParamsObject}@*/
 };
