43a44,46
> // Include a fluid system
> #include <dumux/material/fluidsystems/h2oairfluidsystem.hh>
> 
61,66d63
< // Set the wetting phase
< SET_PROP(TutorialProblemCoupled, WettingPhase) /*@\label{tutorial-coupled:2p-system-start}@*/
< {
< private: typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
< public: typedef Dumux::LiquidPhase<Scalar, Dumux::H2O<Scalar> > type; /*@\label{tutorial-coupled:wettingPhase}@*/
< };
68,73c65,77
< // Set the non-wetting phase
< SET_PROP(TutorialProblemCoupled, NonwettingPhase)
< {
< private: typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
< public: typedef Dumux::LiquidPhase<Scalar, Dumux::LNAPL<Scalar> > type; /*@\label{tutorial-coupled:nonwettingPhase}@*/
< }; /*@\label{tutorial-coupled:2p-system-end}@*/
---
> // Set the wetting phase
> //SET_PROP(TutorialProblemCoupled, WettingPhase) /*@\label{tutorial-coupled:2p-system-start}@*/
> //{
> //private: typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
> //public: typedef Dumux::LiquidPhase<Scalar, Dumux::H2O<Scalar> > type; /*@\label{tutorial-coupled:wettingPhase}@*/
> //};
> //
> //// Set the non-wetting phase
> //SET_PROP(TutorialProblemCoupled, NonwettingPhase)
> //{
> //private: typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
> //public: typedef Dumux::LiquidPhase<Scalar, Dumux::LNAPL<Scalar> > type; /*@\label{tutorial-coupled:nonwettingPhase}@*/
> //}; /*@\label{tutorial-coupled:2p-system-end}@*/
75c79,80
< SET_TYPE_PROP(TutorialProblemCoupled, FluidSystem, Dumux::TwoPImmiscibleFluidSystem<TypeTag>);
---
> //Set the fluid system property
> SET_TYPE_PROP(TutorialProblemCoupled, FluidSystem, Dumux::FluidSystems::H2OAir<typename GET_PROP_TYPE(TypeTag, Scalar)>);
113a119
>         GET_PROP_TYPE(TypeTag, FluidSystem)::init();
