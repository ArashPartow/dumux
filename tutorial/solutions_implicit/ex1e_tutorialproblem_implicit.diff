Index: tutorialproblem_implicit.hh
===================================================================
--- tutorialproblem_implicit.hh	(revision 15068)
+++ tutorialproblem_implicit.hh	(working copy)
@@ -44,6 +44,9 @@
 // Spatially dependent parameters
 #include "tutorialspatialparams_implicit.hh"
 
+// The fluidsystem
+#include <dumux/material/fluidsystems/h2oair.hh>
+
 // The components that are used
 #include <dumux/material/components/h2o.hh>
 #include <dumux/material/components/lnapl.hh>
@@ -73,20 +76,20 @@
 SET_TYPE_PROP(TutorialProblemImplicit, GridCreator, Dumux::CubeGridCreator<TypeTag>); /*@\label{tutorial-implicit:set-gridcreator}@*/
 
 // Set the wetting phase
-SET_PROP(TutorialProblemImplicit, WettingPhase) /*@\label{tutorial-implicit:2p-system-start}@*/
-{
-private: typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
-public: typedef Dumux::FluidSystems::LiquidPhase<Scalar, Dumux::H2O<Scalar> > type; /*@\label{tutorial-implicit:wettingPhase}@*/
-};
+// SET_PROP(TutorialProblemImplicit, WettingPhase) /*@\label{tutorial-implicit:2p-system-start}@*/
+// {
+// private: typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
+// public: typedef Dumux::FluidSystems::LiquidPhase<Scalar, Dumux::H2O<Scalar> > type; /*@\label{tutorial-implicit:wettingPhase}@*/
+// };
+// 
+// // Set the non-wetting phase
+// SET_PROP(TutorialProblemImplicit, NonwettingPhase)
+// {
+// private: typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
+// public: typedef Dumux::FluidSystems::LiquidPhase<Scalar, Dumux::LNAPL<Scalar> > type; /*@\label{tutorial-implicit:nonwettingPhase}@*/
+// }; /*@\label{tutorial-implicit:2p-system-end}@*/
 
-// Set the non-wetting phase
-SET_PROP(TutorialProblemImplicit, NonwettingPhase)
-{
-private: typedef typename GET_PROP_TYPE(TypeTag, Scalar) Scalar;
-public: typedef Dumux::FluidSystems::LiquidPhase<Scalar, Dumux::LNAPL<Scalar> > type; /*@\label{tutorial-implicit:nonwettingPhase}@*/
-}; /*@\label{tutorial-implicit:2p-system-end}@*/
-
-SET_TYPE_PROP(TutorialProblemImplicit, FluidSystem, Dumux::TwoPImmiscibleFluidSystem<TypeTag>);/*@\label{tutorial-implicit:set-fluidsystem}@*/
+SET_TYPE_PROP(TutorialProblemImplicit, FluidSystem, Dumux::FluidSystems::H2OAir<typename GET_PROP_TYPE(TypeTag, Scalar)>);/*@\label{tutorial-implicit:set-fluidsystem}@*/
 // Disable gravity
 SET_BOOL_PROP(TutorialProblemImplicit, ProblemEnableGravity, false); /*@\label{tutorial-implicit:gravity}@*/
 }
@@ -127,6 +130,7 @@
         : ParentType(timeManager, gridView)
         , eps_(3e-6)
     {
+      GET_PROP_TYPE(TypeTag, FluidSystem)::init();
 #if !(HAVE_DUNE_ALUGRID || HAVE_UG)
       std::cout << "If you want to use simplices instead of cubes, install and use dune-ALUGrid or UGGrid." << std::endl;
 #endif // !(HAVE_DUNE_ALUGRID || HAVE_UG)
