Index: tutorialspatialparams_implicit.hh
===================================================================
--- tutorialspatialparams_implicit.hh	(revision 15068)
+++ tutorialspatialparams_implicit.hh	(working copy)
@@ -82,6 +82,7 @@
     // Get object types for function arguments
     typedef typename GET_PROP_TYPE(TypeTag, FVElementGeometry) FVElementGeometry;
     typedef typename Grid::Traits::template Codim<0>::Entity Element;
+    typedef Dune::FieldVector<Scalar, dim> GlobalPosition;
 
 public:
     // get material law from property system
@@ -103,8 +104,16 @@
     const Dune::FieldMatrix<Scalar, dim, dim> &intrinsicPermeability(const Element &element, /*@\label{tutorial-implicit:permeability}@*/
                                                     const FVElementGeometry &fvGeometry,
                                                     const int scvIdx) const
-    { return K_; }
+    {
+        GlobalPosition globalPos = element.geometry().corner(scvIdx);
 
+       if(globalPos[0] < 300){
+           return KLeft_;
+       }else{
+           return KRight_;
+       }
+    }
+
     /*! Defines the porosity \f$[-]\f$ of the porous medium depending
      * on the position in the domain
      *
@@ -119,8 +128,16 @@
     Scalar porosity(const Element &element,                    /*@\label{tutorial-implicit:porosity}@*/
                     const FVElementGeometry &fvGeometry,
                     const int scvIdx) const
-    { return 0.2; }
+    {
+       GlobalPosition globalPos = element.geometry().corner(scvIdx);
 
+       if(globalPos[0] < 300){
+           return poroLeft_;
+       }else{
+           return poroRight_;
+       }
+    }
+
     /*! Returns the parameter object for the material law (i.e. Brooks-Corey)
      *  depending on the position in the domain
      *
@@ -142,12 +159,16 @@
     // constructor
     TutorialSpatialParamsImplicit(const GridView& gridView) :
         ImplicitSpatialParams<TypeTag>(gridView),
-        K_(0)
+        KLeft_(0), KRight_(0)
     {
         //set main diagonal entries of the permeability tensor to a value
         //setting to one value means: isotropic, homogeneous
-        for (int i = 0; i < dim; i++)
-            K_[i][i] = 1e-7;
+        for (int i = 0; i < dim; i++){
+            KLeft_[i][i] = 1e-8;
+            KRight_[i][i] = 1e-9;
+        }
+        poroLeft_ = 0.15;
+        poroRight_ = 0.3;
 
         //set residual saturations
         materialParams_.setSwr(0.0);                /*@\label{tutorial-implicit:setLawParams}@*/
@@ -159,7 +180,10 @@
     }
 
 private:
-    Dune::FieldMatrix<Scalar, dim, dim> K_;
+    Dune::FieldMatrix<Scalar,dim,dim> KLeft_;
+    Dune::FieldMatrix<Scalar,dim,dim> KRight_;
+    Scalar poroLeft_;
+    Scalar poroRight_;
     // Object that holds the values/parameters of the selected material law.
     MaterialLawParams materialParams_;                 /*@\label{tutorial-implicit:matParamsObject}@*/
 };
