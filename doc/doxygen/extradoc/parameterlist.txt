/*!
 *\file
 *\ingroup Parameter
 *
 *\brief List of currently useable run-time parameters
 *
 * The listed run-time parameters are in general available,
 * but we point out that a certain model might not be able
 * to use every parameter!
 *
 * | Group | Parameter | Type | Default Value | Explanation |
 * | :- | :- | :- | :- | :-
 * | - | ParameterFile | std::string | executable.input | name of the parameter file |
 * | \b FreeFlow | BoundaryLayerModel | int | 0 | 0 for none, 1 Blasius, 2 and 3 turbulent BL, 9 constant thickness |
 * | | BoundaryLayerOffset | Scalar | - | virtual run-up distance for BL models |
 * | | ConstThickness | Scalar | - | constant BL thickness (BL model 9) |
 * | | ExponentMTC | Scalar | - | mass transfer coefficient for S^MTC |
 * | | MassTransferModel | int | 0 | 0 for none, 1 power law, 2 Schluender model |
 * | | RefMassfrac | Scalar | - | free stream water mass fraction |
 * | | VxMax | Scalar | - | free stream velocity |
 * | \b Grid | File | std::string | - | name of the grid file, if a corresponding GridCreator is used |
 * | | NumberOfCellsX | int | - | number of cells in x direction for the Cube/SimplexGridCreator |
 * | | NumberOfCellsY | int | - | number of cells in y direction for the Cube/SimplexGridCreator |
 * | | NumberOfCellsZ | int | - | number of cells in z direction for the Cube/SimplexGridCreator |
 * | | UpperRightX | Scalar | - | x-coordinate of the upper back right corner for the Cube/SimplexGridCreator |
 * | | UpperRightY | Scalar | - | y-coordinate of the upper back right corner for the Cube/SimplexGridCreator |
 * | | UpperRightZ | Scalar | - | z-coordinate of the upper back right corner for the Cube/SimplexGridCreator |
 * | \b GridAdapt | AdaptionInterval | int | 1 | time step interval for adaption |
 * | | CoarsenPercentileFlux | Scalar | 0.2 | percentile of cells coarsened because of flux criterion |
 * | | CoarsenPercentileSat | Scalar | 0.2 | percentile of cells coarsened because of saturation criterion |
 * | | CoarsenThresholdFlux | Scalar | 0.2 | flux threshold for coarsening cells |
 * | | CoarsenThresholdSat | Scalar | 0.2 | saturation threshold for coarsening cells |
 * | | CoarsenTolerance | Scalar | 0.001 | tolerance for coarsening |
 * | | EnableInitializationIndicator | bool | false | switch the use of initial grid adaption on/off |
 * | | EnableMultiPointFluxApproximation | bool | true | hangingNode: Two-point flux approximation (false) or MPFA (true) |
 * | | MaxInteractionVolumes | int | 4 | maximum number of interaction regions used |
 * | | MaxLevel | int | 1 | maximum allowed level |
 * | | MinLevel | int | 0 | mimimum allowed level |
 * | | RefineAtDirichletBC | bool | false | switch for refinement at Dirichlet BC's -> not used by all indicators! |
 * | | RefineAtFluxBC | bool | false | switch for refinement at Neumann BC's -> not used by all indicators! |
 * | | RefineAtSource | bool | false | switch for refinement at sources -> not used by all indicators! |
 * | | RefinePercentileFlux | Scalar | 0.8 | percentile of cells refined because of flux criterion |
 * | | RefinePercentileSat | Scalar | 0.8 | percentile of cells refined because of saturation criterion |
 * | | RefineThresholdFlux | Scalar | 0.8 | flux threshold for refining cells |
 * | | RefineThresholdSat | Scalar | 0.8 | saturation threshold for refining cells |
 * | | RefineTolerance | Scalar | 0.05 | tolerance for refinement |
 * | \b Impet | CFLFactor | Scalar | 1 | scalar factor for additional scaling of the time step |
 * | | DtVariationRestrictionFactor | Scalar | std::numeric_limits<double>::max() | |
 * | | EnableVolumeIntegral | bool | true | enables volume integral in the pressure equation (volume balance formulation) |
 * | | ErrorTermFactor | Scalar | 0.5 | scaling factor for the error term |
 * | | ErrorTermLowerBound | Scalar | 0.1 (2p), 0.2 (2p2c) | lower threshold used for the error term evaluation |
 * | | ErrorTermUpperBound | Scalar | 0.9 | upper threshold used for the error term evaluation |
 * | | IterationFlag | int | 0 | 0 = no iterations, 1 = iterate IterationNumber iterations, 2 = iterate until converged or IterationNumber is reached |
 * | | IterationNumber | int | 2 | number of iterations if IMPET iterations are enabled by the IterationFlags |
 * | | MaximumDefect | Scalar | 1.00E-005 | maximum Defect if IMPET iterations are enabled by the IterationFlags |
 * | | PorosityThreshold | Scalar | 1e-6 | |
 * | | RelaxationFactor | Scalar | 1 | 1 = new solution is new solution, 0 = old solution is new solution |
 * | | RestrictFluxInTransport | int | 0 | restrict flux if direction reverses after pressure equation |
 * | | SubCFLFactor | Scalar | 1 | CFL factor for local time-stepping |
 * | | SwitchNormals | bool | false | |
 * | \b Implicit | EnableHints | bool | false | use the already calculated solutions as starting values of the volume variables |
 * | | EnableJacobianRecycling | bool | false | specify whether the jacobian matrix of the last iteration of a time step should be reused |
 * | | EnablePartialReassemble | bool | false | specify whether the jacobian matrix should be only reassembled for elements where at least one vertex is above the specified tolerance |
 * | | EnableSmoothUpwinding | bool | false | use the smooth upwinding method (MPNC only) |
 * | | MassUpwindWeight | Scalar | 1 (0.5 for 1p) | value of the weight of the upwind direction in the mass conservation equations |
 * | | MaxTimeStepDivisions | int | 10 | |
 * | | MobilityUpwindWeight | Scalar | 1 (0.5 for 1p) | weight for the upwind mobility in the velocity calculation |
 * | | NumericDifferenceMethod | int | 1 | which kind of method should be used to numerically calculate the partial derivatives of the residual (1: forward, 0: central, -1: backward) |
 * | | UseTwoPointFlux | bool | false | indicates whether two-point flux should be used |
 * | | WithStabilization | bool | true | |
 * | \b LinearSolver | GMResRestart | int | 10 | restart parameter for GMRes |
 * | | MaxIterations | double | 250 (imp), 500 (dec) | maximum number of iterations of solver |
 * | | PreconditionerIterations | int | 1 | number of preconditioner iterations per solver iteration |
 * | | PreconditionerRelaxation | double | 1 | relaxation parameter for the preconditioner |
 * | | ResidualReduction | double | 1e-6 (imp), 1e-13 (dec) | target reduction of the initial residual |
 * | | Verbosity | int | 0 | specifies the verbosity of the linear solver |
 * | \b MPFA | CalcVelocityInTransport | bool | false | enable facewise velocity calculation in the transport step (less efficient!) |
 * | | EnableComplexLStencil | bool | true | enable use of the two more complex (non-centered) L-shapes (3-d) |
 * | | EnableSimpleLStencil | bool | true | enable use of the two simpler (centered) L-shapes (3-d) |
 * | | EnableTPFA | bool | false | enable use of TPFA (3-d) if neighboring cells are of the same grid level |
 * | | TransmissibilityCriterion | int | 0 | 0 = default criterion, 1 = accumulative criterion |
 * | | TransmissibilityCriterionThreshold | Scalar | 1e-8 | threshold for transmissibility choice |
 * | \b Newton | EnableChop | bool | true | chop the Newton update at the beginning of the non-linear solver (MPNC only) |
 * | | EnableResidualCriterion | bool | false | declare convergence if the initial residual is reduced by the factor ResidualReduction |
 * | | EnableShiftCriterion | bool | true | declare convergence if the primary variables differ by a maximum of MaxRelativeShift |
 * | | MaxRelativeShift | Scalar | 1e-8 | tolerance for the shift criterion |
 * | | MaxSteps | int | 18 | number of maximum iterations for the Newton method |
 * | | MaxTimeStepDivisions | int | 10 | |
 * | | ResidualReduction | Scalar | 1e-5 | tolerance for the residual criterion |
 * | | SatisfyResidualAndShiftCriterion | bool | false | declare convergence only if both criteria are met |
 * | | TargetSteps | int | 10 | number of iterations at which the Newton method should aim at |
 * | | UseLineSearch | bool | false | specifies whether the update should be done using line search |
 * | | WriteConvergence | bool | false | specifies whether the convergence rate and the global residual gets written out to disk for every Newton iteration |
 * | \b Pardiso | NumProcessors | int | - | |
 * | \b PorousMedium | CharPoreDiameter | Scalar | - | parameter for Schluender mass-transfer model |
 * | \b Problem | EnableGravity | bool | true | returns whether gravity is considered in the problem |
 * | | Salinity | Scalar | 1e-3 | |
 * | \b SpatialParams | ForchCoeff | Scalar | 0.55 | property for the forchheimer coefficient |
 * | \b Stokes | StabilizationAlpha | Scalar | 0 | parameter for the stabilization |
 * | | StabilizationBeta | Scalar | 0 | parameter for the stabilization at boundaries |
 * | \b TimeManager | DtInitial | Scalar | - | initial time step size |
 * | | MaxTimeStepSize | Scalar | 1.00E+100 | maximum time step size |
 * | | PrintParameters | bool | true | print used and unused parameters and their values at the end of the simulation |
 * | | PrintProperties | bool | false | print used properties and their values at the end of the simulation |
 * | | Restart | Scalar | false | use the restart mechanism |
 * | | SubTimestepVerbosity | int | 0 | |
 * | | TEnd | Scalar | - | the final time until the simulation should run |
 * | \b Vtk | AddAverageMolarMass | bool | false | add average molar mass to output (MPNC only) |
 * | | AddBoundaryTypes | bool | false | add boundary types to output (MPNC only) |
 * | | AddDeltaP | bool | false | output of pressure minus a fixed value |
 * | | AddDensities | bool | true | add densities to output (MPNC only) |
 * | | AddEnthalpies | bool | true | add enthalpies to output (MPNC only) |
 * | | AddFugacities | bool | false | add fugacities to output (MPNC only) |
 * | | AddInternalEnergies | bool | false | add internal energies to output (MPNC only) |
 * | | AddMassFractions | bool | false | add mass fractions to output (MPNC only) |
 * | | AddMobilities | bool | true | add mobilities to output (MPNC only) |
 * | | AddMolarities | bool | false | add molarities to output (MPNC only) |
 * | | AddMoleFractions | bool | true | add mole fractions to output (MPNC only) |
 * | | AddPermeability | bool | false | |
 * | | AddPorosity | bool | true | add porosity to output (MPNC only) |
 * | | AddPressures | bool | true | add pressures to output (MPNC only) |
 * | | AddSaturations | bool | true | add saturations to output (MPNC only) |
 * | | AddTemperatures | bool | false | add temperatures to output (MPNC only) |
 * | | AddVelocities | bool | false | add velocities to output (MPNC only) |
 * | | AddVelocity | bool | false | add velocity to output (2p(ni) and 2p2c(ni) only) |
 * | | OutputLevel | int | 0 (2 for 2p2c) | Vtk output verbosity (0: only primary variables, >0 more depending on the model) |
 * | | RockMechanicsSignConvention | bool | true | Compressive stress has positive sign |
 */
